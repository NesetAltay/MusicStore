// <auto-generated />
using System;
using KatmanliOrnek.DAL.Concrete.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KatmanliOrnek.DAL.Migrations
{
    [DbContext(typeof(PlakDbContext))]
    partial class PlakDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("KatmanliOrnek.Entities.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ArtistName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArtistName = "Tarkan",
                            CreatedDate = new DateTime(2023, 7, 18, 16, 15, 26, 978, DateTimeKind.Local).AddTicks(8057),
                            State = "Created"
                        });
                });

            modelBuilder.Entity("KatmanliOrnek.Entities.Plak", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Discontinued")
                        .HasColumnType("bit");

                    b.Property<double?>("Discount")
                        .HasColumnType("float");

                    b.Property<string>("PlakName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.ToTable("Plaks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArtistId = 1,
                            CreatedDate = new DateTime(2023, 7, 18, 16, 15, 26, 978, DateTimeKind.Local).AddTicks(7109),
                            Discontinued = false,
                            Discount = 0.14999999999999999,
                            PlakName = "Şımarık",
                            RecordDate = new DateTime(1995, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "Created",
                            UnitPrice = 10m
                        },
                        new
                        {
                            Id = 2,
                            ArtistId = 1,
                            CreatedDate = new DateTime(2023, 7, 18, 16, 15, 26, 978, DateTimeKind.Local).AddTicks(7126),
                            Discontinued = false,
                            Discount = 0.14999999999999999,
                            PlakName = "Plak2",
                            RecordDate = new DateTime(1997, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "Created",
                            UnitPrice = 10m
                        },
                        new
                        {
                            Id = 3,
                            ArtistId = 1,
                            CreatedDate = new DateTime(2023, 7, 18, 16, 15, 26, 978, DateTimeKind.Local).AddTicks(7131),
                            Discontinued = true,
                            Discount = 0.14999999999999999,
                            PlakName = "Palk3",
                            RecordDate = new DateTime(1998, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "Created",
                            UnitPrice = 10m
                        },
                        new
                        {
                            Id = 4,
                            ArtistId = 1,
                            CreatedDate = new DateTime(2023, 7, 18, 16, 15, 26, 978, DateTimeKind.Local).AddTicks(7135),
                            Discontinued = false,
                            Discount = 0.14999999999999999,
                            PlakName = "plak4",
                            RecordDate = new DateTime(1998, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "Created",
                            UnitPrice = 10m
                        },
                        new
                        {
                            Id = 5,
                            ArtistId = 1,
                            CreatedDate = new DateTime(2023, 7, 18, 16, 15, 26, 978, DateTimeKind.Local).AddTicks(7141),
                            Discontinued = true,
                            Discount = 0.14999999999999999,
                            PlakName = "Palk4",
                            RecordDate = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "Created",
                            UnitPrice = 10m
                        },
                        new
                        {
                            Id = 6,
                            ArtistId = 1,
                            CreatedDate = new DateTime(2023, 7, 18, 16, 15, 26, 978, DateTimeKind.Local).AddTicks(7146),
                            Discontinued = false,
                            Discount = 0.14999999999999999,
                            PlakName = "Plak5",
                            RecordDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "Created",
                            UnitPrice = 10m
                        },
                        new
                        {
                            Id = 7,
                            ArtistId = 1,
                            CreatedDate = new DateTime(2023, 7, 18, 16, 15, 26, 978, DateTimeKind.Local).AddTicks(7151),
                            Discontinued = false,
                            Discount = 0.14999999999999999,
                            PlakName = "Palk6",
                            RecordDate = new DateTime(1991, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "Created",
                            UnitPrice = 10m
                        },
                        new
                        {
                            Id = 8,
                            ArtistId = 1,
                            CreatedDate = new DateTime(2023, 7, 18, 16, 15, 26, 978, DateTimeKind.Local).AddTicks(7155),
                            Discontinued = false,
                            Discount = 0.14999999999999999,
                            PlakName = "Plak7",
                            RecordDate = new DateTime(1993, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "Created",
                            UnitPrice = 10m
                        },
                        new
                        {
                            Id = 9,
                            ArtistId = 1,
                            CreatedDate = new DateTime(2023, 7, 18, 16, 15, 26, 978, DateTimeKind.Local).AddTicks(7159),
                            Discontinued = false,
                            Discount = 0.14999999999999999,
                            PlakName = "Plak8",
                            RecordDate = new DateTime(1998, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "Created",
                            UnitPrice = 10m
                        },
                        new
                        {
                            Id = 10,
                            ArtistId = 1,
                            CreatedDate = new DateTime(2023, 7, 18, 16, 15, 26, 978, DateTimeKind.Local).AddTicks(7164),
                            Discontinued = false,
                            Discount = 0.14999999999999999,
                            PlakName = "Plak9",
                            RecordDate = new DateTime(1998, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "Created",
                            UnitPrice = 10m
                        },
                        new
                        {
                            Id = 11,
                            ArtistId = 1,
                            CreatedDate = new DateTime(2023, 7, 18, 16, 15, 26, 978, DateTimeKind.Local).AddTicks(7168),
                            Discontinued = true,
                            Discount = 0.14999999999999999,
                            PlakName = "Palk10",
                            RecordDate = new DateTime(1997, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "Created",
                            UnitPrice = 10m
                        },
                        new
                        {
                            Id = 12,
                            ArtistId = 1,
                            CreatedDate = new DateTime(2023, 7, 18, 16, 15, 26, 978, DateTimeKind.Local).AddTicks(7172),
                            Discontinued = false,
                            Discount = 0.14999999999999999,
                            PlakName = "Plak11",
                            RecordDate = new DateTime(1993, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "Created",
                            UnitPrice = 10m
                        },
                        new
                        {
                            Id = 13,
                            ArtistId = 1,
                            CreatedDate = new DateTime(2023, 7, 18, 16, 15, 26, 978, DateTimeKind.Local).AddTicks(7177),
                            Discontinued = false,
                            Discount = 0.14999999999999999,
                            PlakName = "Plak12",
                            RecordDate = new DateTime(1991, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "Created",
                            UnitPrice = 10m
                        },
                        new
                        {
                            Id = 14,
                            ArtistId = 1,
                            CreatedDate = new DateTime(2023, 7, 18, 16, 15, 26, 978, DateTimeKind.Local).AddTicks(7181),
                            Discontinued = true,
                            Discount = 0.14999999999999999,
                            PlakName = "Plak13",
                            RecordDate = new DateTime(1995, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "Created",
                            UnitPrice = 10m
                        });
                });

            modelBuilder.Entity("KatmanliOrnek.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 7, 18, 16, 15, 26, 978, DateTimeKind.Local).AddTicks(4797),
                            Password = "admin",
                            Role = "Admin",
                            State = "Created",
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("KatmanliOrnek.Entities.Plak", b =>
                {
                    b.HasOne("KatmanliOrnek.Entities.Artist", "Artist")
                        .WithMany("Plaks")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Artist");
                });

            modelBuilder.Entity("KatmanliOrnek.Entities.Artist", b =>
                {
                    b.Navigation("Plaks");
                });
#pragma warning restore 612, 618
        }
    }
}
